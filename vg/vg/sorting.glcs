#version 430

layout(local_size_x = 1024) in;


// per particle position

layout(std430, binding = 0) readonly buffer particleSSBO
{
	float particle[];
};


// per particle surrounding cell

layout(std430, binding = 1) readonly buffer cellsSSBO
{
	uint cell[];
};


// per particle position inside cell

layout(std430, binding = 2) readonly buffer indicesSSBO
{
	uint index[];
};


// per cell start address

layout(std430, binding = 4) readonly buffer prefixsumSSBO
{
	uint prefixsum[];
};


// per cell sorted particles

layout(std430, binding = 6) writeonly buffer sortedSSBO
{
	float sorted[];
};


uniform uint particle_count;


void main()
{
	// get particle

		uint particle_index = gl_GlobalInvocationID.x;
	
		if(particle_index >= particle_count) return;

	// move to new index
	
		uint sorted_index = prefixsum[cell[particle_index]] + index[particle_index];

		sorted[sorted_index * 3]     = particle[particle_index * 3];
		sorted[sorted_index * 3 + 1] = particle[particle_index * 3 + 1];
		sorted[sorted_index * 3 + 2] = particle[particle_index * 3 + 2];
}
