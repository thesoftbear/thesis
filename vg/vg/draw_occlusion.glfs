#version 430

out vec4 fragment_color;

layout(binding = 0) uniform sampler2D position_texture;
layout(binding = 1) uniform sampler2D normal_texture;

layout(r32f) uniform image2D occlusion_texture;

uniform float samples;
uniform vec2 resolution;

void main()
{
	vec3 fragment_position = texture(position_texture, gl_FragCoord.xy / resolution).xyz;
	vec3 fragment_normal = texture(normal_texture, gl_FragCoord.xy / resolution).xyz;

	if(fragment_normal == vec3(0))
	{
		float background = 0.5 * gl_FragCoord.y / resolution.y + 0.5;
		fragment_color = vec4(vec3(1, 1, 1), 1);
		
	}
	else
	{
		/* 
		// local illumination
		vec3 light_source = vec3(10, 10, 10);
		vec3 light_direction = normalize(light_source - fragment_position);
		float brightness = dot(fragment_normal, light_direction);
		*/

		float brightness = 1.0 - imageLoad(occlusion_texture, ivec2(gl_FragCoord.xy)).x / samples; 
		fragment_color = vec4(vec3(brightness), 1);
	}
}
