#version 430

out vec4 fragment_color;

layout(binding = 0) uniform sampler2D position_texture;
layout(binding = 1) uniform sampler2D normal_texture;

layout(r32f) uniform image2D occlusion_texture;

uniform float samples;

void main()
{
	vec3 fragment_position = texture(position_texture, gl_FragCoord.xy / vec2(1280, 720)).xyz;
	vec3 fragment_normal = texture(normal_texture, gl_FragCoord.xy / vec2(1280, 720)).xyz;

	if(fragment_position == vec3(0)) discard;

	float brightness = imageLoad(occlusion_texture, ivec2(gl_FragCoord.xy)).x; 

	float color = brightness / samples;

	// float diffuse = clamp(dot(normalize(fragment_normal), normalize(vec3(-10, 10, 10))), 0.0, 1.0) * color;
	fragment_color = vec4(vec3(color), 1);
}
